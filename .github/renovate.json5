{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>kitos9112/k8s-home//.github/renovate/autoMerge",
    "github>kitos9112/k8s-home//.github/renovate/labels",
    "github>kitos9112/k8s-home//.github/renovate/semanticCommits"
  ],
  "platform": "github",
  "username": "henry-pa-bot[bot]",
  "repositories": ["kitos9112/k8s-home"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "rosey-pa-bot <166536+henry-bot[bot]@users.noreply.github.com>",
  "assignees": ["@kitos9112"],
  "timezone": "Europe/London",
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "rebaseWhen": "conflicted",
  // set up Renovate Managers
  "helmv3": {
    "fileMatch": ["charts/.+/Chart\\.yaml$"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+/helm-release\\.yaml$"]
  },
  "flux": {
   "fileMatch": ["cluster/.+\\.yaml$"],
  },
  "kubernetes": {
    "fileMatch": ["cluster/.+\\.yaml$"],
    "ignorePaths": ["cluster/base/"]
  },

  "regexManagers": [
     // regexManager to read and process cert-manager CRD's
    {
      "fileMatch": [
        "cluster/crds/cert-manager/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process kube-prometheus-stack and velero CRD's
    {
      "fileMatch": [
        "cluster/crds/kube-prometheus-stack/.+\\.yaml$",
        "cluster/crds/velero/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process Traefik CRD's
    {
      "fileMatch": [
        "cluster/crds/traefik/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
  ],
  "packageRules":  [
    // setup datasources
    {
      "matchDatasources": ["helm"],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": ["docker"],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // custom version schemes
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      "matchPackageNames": ["blakeblackshear/frigate"]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      "matchPackageNames": [
        "quay.io/minio/minio"
      ]
    },
    // pin package versions

    // EMPTY

    // version strategies

    // EMPTY

    // group packages
    {
      "matchDatasources": [
        "github-releases",
        "docker"
      ],
      "matchPackagePatterns": [
        "external-snapshotter",
        "snapshot-controller"
      ],
      "groupName": "external-snapshotter-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": [
        "github-tags",
        "docker"
      ],
      "matchPackagePatterns": [
        "rancher/system-upgrade-controller"
      ],
      "groupName": "system-upgrade-controller-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    // Custom rules
    // TODO: Avoid bumping a breaking release that was categorised as "fix"
        {
      "matchDatasources": [
        "flux"
      ],
      "matchPackagePatterns": [
        "grafana/helm-charts"
      ],
      "automerge": false
    }
  ]
}