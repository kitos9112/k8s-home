---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      interval: 5m
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      version: 8.6.4
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    deploymentStrategy:
      type: Recreate
    replicas: 1
    adminPassword: ${SECRET_GRAFANA_PASSWORD}
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - disableDeletion: false
            allowUiUpdates: true
            updateIntervalSeconds: 10
            editable: true
            folder: ""
            name: default
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
    dashboards:
      default:
        flux-cluster:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/refs/heads/main/monitoring/configs/dashboards/cluster.json
        flux-control-plane:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/refs/heads/main/monitoring/configs/dashboards/control-plane.json
        flux-logs:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/refs/heads/main/monitoring/configs/dashboards/control-plane.json
        speedtest:
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
          gnetId: 13665
          revision: 4
        traefik:
          datasource: Prometheus
          gnetId: 17346
          revision: 9
        apc-ups:
          # renovate: depName="APC UPS (SNMP)"
          gnetId: 12340
          revision: 1
          datasource: Prometheus
        cert-manager:
          # renovate: depName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 18
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 19
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 42
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 41
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 32
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 34
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        miniflux:
          url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 6
          datasource: Prometheus
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - access: proxy
            isDefault: true
            name: Prometheus
            type: prometheus
            url: http://thanos-query:9090/
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-operated.monitoring.svc.cluster.local:9090
            jsonData:
              timeInterval: 1m
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-headless.monitoring.svc.cluster.local:3100
            jsonData:
              maxLines: 2500000
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Prometheus
            orgId: 1
          - name: Alertmanager
            orgId: 1
    envFromSecret: grafana-ini-secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        oauth_auto_login: true
      auth.anonymous:
        enabled: true
        org_id: 1
        org_name: Main Org.
        org_role: Viewer
      auth.basic:
        disable_login_form: false
      auth.google:
        allow_sign_up: true
        enabled: true
        scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
      log:
        mode: console
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      server:
        enable_gzip: true
        root_url: https://grafana.${SECRET_DOMAIN}
      users:
        allow_sign_up: false
        auto_assign_org_role: Admin
        viewers_can_edit: true
      database:
        type: postgres
        host: home-postgres.home.svc:5432
        ssl_mode: require
        name: grafana
      dataproxy:
        timeout: 300s
      news:
        news_feed_enabled: false
    env:
      GF_DATE_FORMATS_FULL_DATE: MMM Do, YYYY hh:mm:ss a
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_LOG_FILTERS: rendering:debug
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_DOMAIN}
      GF_PANELS_DISABLE_SANITIZE_HTML: true
    envValueFrom:
      GF_DATABASE_USER:
        secretKeyRef:
          name: grafana-owner-user.home-postgres.credentials
          key: username
      GF_DATABASE_PASSWORD:
        secretKeyRef:
          name: grafana-owner-user.home-postgres.credentials
          key: password
    ingress:
      enabled: false
    networkPolicy:
      enabled: true
    nodeSelector:
      kubernetes.io/arch: amd64
      node_locality: internal
    persistence:
      enabled: false
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    podAnnotations:
      configmap.reloader.stakater.com/reload: grafana
    serviceAccount:
      automountServiceAccountToken: true
      create: true
    serviceMonitor:
      enabled: true
    sidecar:
      resources:
        limits:
          cpu: 1000m
          memory: 150Mi
        requests:
          cpu: 50m
          memory: 50Mi
      dashboards:
        enabled: true
        provider:
          foldersFromFilesStructure: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    testFramework:
      enabled: false
