---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  chart:
    spec:
      chart: grafana
      interval: 5m
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      version: 6.56.2
  install:
    remediation:
      retries: 3
  interval: 5m
  upgrade:
    remediation:
      retries: 3
  values:
    replicas: 2
    rbac:
      pspEnabled: false
      pspUseAppArmor: false
    adminPassword: ${SECRET_GRAFANA_PASSWORD}
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - disableDeletion: false
            allowUiUpdates: true
            updateIntervalSeconds: 10
            editable: true
            folder: ""
            name: default
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
    dashboards:
      default:
        flux-cluster:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
        flux-control-plane:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
        flux-logs:
          datasource: Prometheus
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
        calico-felix:
          datasource: Prometheus
          gnetId: 12175
          revision: 5
        minio:
          datasource: Prometheus
          gnetId: 13502
          revision: 19
        speedtest:
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
          gnetId: 13665
          revision: 4
        traefik-ingress:
          datasource: Prometheus
          gnetId: 4475
          revision: 5
        longhorn:
          datasource: Prometheus
          gnetId: 13032
          revision: 6
        node-exporter-full:
          datasource: Prometheus
          gnetId: 1860
          revision: 27
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - access: proxy
            isDefault: true
            name: Prometheus
            type: prometheus
            url: http://thanos-query:9090/
          - access: proxy
            name: Loki
            type: loki
            url: http://loki-read:3100
            jsonData:
              maxLines: 2500000
        deleteDatasources:
          - name: Loki
            orgId: 1
    deploymentStrategy:
      type: RollingUpdate
    grafana.ini:
      analytics:
        check_for_updates: false
      auth:
        oauth_auto_login: true
      auth.basic:
        disable_login_form: false
      auth.google:
        allow_sign_up: true
        client_id: ${SECRET_GRAFANA_AUTH_GOOGLE_CLIENT_ID}
        client_secret: ${SECRET_GRAFANA_AUTH_GOOGLE_CLIENT_SECRET}
        enabled: true
        scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      server:
        enable_gzip: true
        root_url: https://grafana.${SECRET_DOMAIN}
      users:
        allow_sign_up: false
        auto_assign_org_role: Admin
        viewers_can_edit: true
      database:
        type: postgres
        host: home-postgres.home.svc:5432
        ssl_mode: require
        name: grafana
      dataproxy:
        timeout: 300s
    env:
      GF_DATE_FORMATS_FULL_DATE: MMM Do, YYYY hh:mm:ss a
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_LOG_FILTERS: rendering:debug
      GF_PANELS_DISABLE_SANITIZE_HTML: true
    envValueFrom:
      GF_DATABASE_USER:
        secretKeyRef:
          name: grafana-owner-user.home-postgres.credentials
          key: username
      GF_DATABASE_PASSWORD:
        secretKeyRef:
          name: grafana-owner-user.home-postgres.credentials
          key: password
    ingress:
      enabled: false
    networkPolicy:
      enabled: true
    nodeSelector:
      kubernetes.io/arch: amd64
      node_locality: internal
    persistence:
      enabled: false
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    podAnnotations:
      configmap.reloader.stakater.com/reload: grafana
    serviceAccount:
      autoMount: true
      create: true
    serviceMonitor:
      enabled: true
    sidecar:
      resources:
        limits:
          cpu: 1000m
          memory: 150Mi
        requests:
          cpu: 50m
          memory: 50Mi
      dashboards:
        enabled: true
        provider:
          foldersFromFilesStructure: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
