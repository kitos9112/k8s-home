---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
spec:
  interval: 5m
  releaseName: longhorn
  chart:
    spec:
      # renovate: registryUrl=https://charts.longhorn.io
      chart: longhorn
      version: 1.2.2
      sourceRef:
        kind: HelmRepository
        name: longhorn-charts
        namespace: flux-system
      interval: 1m
  values:
    persistence:
      defaultClassReplicaCount: 3
    csi:
      kubeletRootDir: /var/lib/kubelet
    defaultSettings:
      # backupTarget: ~
      # backupTargetCredentialSecret: ~
      # allowRecurringJobWhileVolumeDetached: ~
      createDefaultDiskLabeledNodes: true
      # defaultDataPath: ~
      # defaultDataLocality: ~
      replicaSoftAntiAffinity: false
      storageOverProvisioningPercentage: "200%"
      storageMinimalAvailablePercentage: "25%"
      upgradeChecker: false
      defaultReplicaCount: 2
      # defaultLonghornStaticStorageClass: ~
      backupstorePollInterval: 500
      # taintToleration: ~
      # systemManagedComponentsNodeSelector: ~
      priorityClass: high-priority
      autoSalvage: true
      autoDeletePodWhenVolumeDetachedUnexpectedly: true
      disableSchedulingOnCordonedNode: false
      replicaZoneSoftAntiAffinity: false
      nodeDownPodDeletionPolicy: "delete-both-statefulset-and-deployment-pod"
      volumeAttachmentRecoveryPolicy: "wait"
      # allowNodeDrainWithLastHealthyReplica: ~
      mkfsExt4Parameters: -O ^64bit,^metadata_csum
      # disableReplicaRebuild: ~
      replicaReplenishmentWaitInterval: 300
      # disableRevisionCounter: ~
      # systemManagedPodsImagePullPolicy: ~
      allowVolumeCreationWithDegradedAvailability: true
      # autoCleanupSystemGeneratedSnapshot: ~
      concurrentAutomaticEngineUpgradePerNodeLimit: 1
      # backingImageCleanupWaitInterval: ~
      guaranteedEngineManagerCPU: 8
      guaranteedReplicaManagerCPU: 8

    # BEST PRACTICES - https://longhorn.io/docs/1.2.2/best-practices/

    # Minimum Recommended Hardware (https://longhorn.io/docs/1.2.2/best-practices/#minimum-recommended-hardware) ✅
    # Software (https://longhorn.io/docs/1.2.2/best-practices/#software) ✅
    # Node and Disk Setup (https://longhorn.io/docs/1.2.2/best-practices/#node-and-disk-setup) ✅
    # Deploying Workloads (https://longhorn.io/docs/1.2.2/best-practices/#deploying-workloads) ✅
    # Volume Maintenance (https://longhorn.io/docs/1.2.2/best-practices/#volume-maintenance) ✅
    # Guaranteed Instance Manager CPU ✅
    # StorageClass (https://longhorn.io/docs/1.2.2/best-practices/#storageclass) ✅
    # Scheduling Settings (https://longhorn.io/docs/1.2.2/best-practices/#scheduling-settings) ❌
    longhornManager:
      priorityClass: "system-node-critical"
    longhornDriver:
      priorityClass: "system-node-critical"
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          # Evict pods from the node if the node becomes unreachable after this toleration timer expires.
          tolerationSeconds: 15
    longhornUI:
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          # Evict pods from the node if the node becomes unreachable after this toleration timer expires.
          tolerationSeconds: 15
    resources:
      requests:
        cpu: "50m"
        memory: "50Mi"
      limits:
        cpu: "250m"
        memory: "500Mi"
