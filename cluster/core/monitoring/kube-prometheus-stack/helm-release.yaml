---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 33.2.0
      interval: 5m
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    force: true
    remediation:
      retries: 3
  values:
    nameOverride: ""
    fullnameOverride: "prometheus"
    alertmanager:
      alertmanagerSpec:
        image:
          repository: quay.io/prometheus/alertmanager
          tag: v0.23.0
        storage:
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
              storageClassName: longhorn
      config:
        global:
          resolve_timeout: 5m
          slack_api_url: ${SECRET_ALERT_MANAGER_DISCORD_WEBHOOK}
        inhibit_rules:
          - equal:
              - alertname
              - namespace
            source_match:
              severity: critical
            target_match:
              severity: warning
        receivers:
          - name: "null"
          - name: discord
            slack_configs:
              - channel: "#k8s-uk-home-notifications"
                icon_url: https://avatars3.githubusercontent.com/u/3380462?s=200&v=4
                send_resolved: true
                text: |-
                  {{ range .Alerts -}}
                    **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                  **Description:** {{ if ne .Annotations.description ""}}{{ .Annotations.description }}{{else}}N/A{{ end }}
                  **Details:**
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
                title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }}{{ else }}{{ .CommonLabels.alertname }}{{ end }}'
                username: Prometheus
        route:
          group_by:
            - alertname
            - job
          group_interval: 5m
          group_wait: 30s
          receiver: discord
          repeat_interval: 6h
          routes:
            - match:
                alertname: Watchdog
              receiver: "null"
            - continue: true
              match_re:
                severity: critical
              receiver: discord
      ingress:
        enabled: false
    grafana:
      enabled: false
      forceDeployDashboards: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: false
      endpoints:
        - ${SECRET_K3S_CONTROL_PLANE_ADDRESS}
      service:
        port: 10250
        targetPort: 10250
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: true
      endpoints:
        - ${SECRET_K3S_CONTROL_PLANE_ADDRESS}
      service:
        port: 10249
        targetPort: 10249
    kubeScheduler:
      enabled: true
      endpoints:
        - ${SECRET_K3S_CONTROL_PLANE_ADDRESS}
      service:
        port: 10250
        targetPort: 10250
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    prometheus:
      ingress:
        enabled: false
      prometheusSpec:
        nodeSelector:
          node_locality: "internal"
          kubernetes.io/arch: "amd64"
        replicas: 1
        replicaExternalLabelName: "replica"
        image:
          repository: quay.io/prometheus/prometheus
          tag: v2.33.4
        additionalScrapeConfigs:
          - honor_timestamps: true
            job_name: minio
            metrics_path: /minio/v2/metrics/cluster
            static_configs:
              - targets:
                  - minio.tools:9000
          - job_name: "felix_metrics"
            scrape_interval: 5s
            scheme: http
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_name]
                regex: felix-metrics-svc
                replacement: $1
                action: keep
          - job_name: "kube_controllers_metrics"
            scrape_interval: 5s
            scheme: http
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_name]
                regex: kube-controllers-metrics-svc
                replacement: $1
                action: keep
        enableAdminAPI: true
        podMonitorNamespaceSelector: {}
        podMonitorSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 3h
        ruleNamespaceSelector: {}
        ruleSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 15Gi
              storageClassName: longhorn
        thanos:
          objectStorageConfig:
            key: objstore.yml
            name: thanos-objstore
        walCompression: true
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      monitor:
        enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    prometheusOperator:
      image:
        repository: quay.io/prometheus-operator/prometheus-operator
        tag: v0.54.1
      prometheusConfigReloaderImage:
        repository: quay.io/prometheus-operator/prometheus-config-reloader
        tag: v0.54.1
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 200m
            memory: 100Mi
      configReloaderCpu: 0
      admissionWebhooks:
        certManager:
          enabled: true
      thanosImage:
        repository: quay.io/thanos/thanos
        tag: v0.25.0
